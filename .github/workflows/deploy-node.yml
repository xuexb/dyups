name: Deploy

on:
  workflow_dispatch:
    inputs:
      version:
        description: '部署版本'
        default: 'latest'
        type: string
        required: false
      envname:
        description: '部署机器'
        type: choice
        required: false
        default: "bj01"
        options:
          - "sg01"
          - "hk01"
          - "kr01"
          - "jp01"
          - "bj01"
          - "cd01"
          - "sh01"
          - "wh01"

env:
  IMAGE_NAME: ${{ github.repository }}
  SSH_HOST: "${{ inputs.envname }}.ddns.xuexb.com"
  CONTAINER_NAME: dyups

jobs:
  depoly:
    runs-on: ubuntu-latest
    steps:
      - name: Configure 1Password Service Account
        uses: 1password/load-secrets-action/configure@v2
        with:
          service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
      - name: Load credentials
        uses: 1password/load-secrets-action@v2
        with:
          export-env: true
        env:
          SSH_USERNAME: "op://ecs-cicd/dyups-agent/mjqbkhplbfjdp6eacrvkr36hsa/username"
          SSH_KEY: "op://ecs-cicd/dyups-agent/private_key"
          SSH_PORT: "op://ecs-cicd/dyups-agent/mjqbkhplbfjdp6eacrvkr36hsa/port"
      - name: Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ env.SSH_KEY }}
          port: ${{ env.SSH_PORT }}
          command_timeout: 30m
          script: |
            docker pull ghcr.io/xuexb/dyups:${{ inputs.version }} \
              && (docker ps -aq --filter "name=^${{ env.CONTAINER_NAME }}$" | xargs docker rm -f || echo "Delete fail") \
              && docker run \
              --restart=always \
              -p 80:80 \
              -p 443:443 \
              -d \
              --name "${{ env.CONTAINER_NAME }}" \
              --env "DYUPS_TOKEN=${{ secrets.DYUPS_TOKEN }}" \
              --env "DYUPS_DB_HOST=${{ secrets.DYUPS_DB_HOST }}" \
              --env "DYUPS_DB_PORT=${{ secrets.DYUPS_DB_PORT }}" \
              --env "DYUPS_DB_DATABASE=${{ secrets.DYUPS_DB_DATABASE }}" \
              --env "DYUPS_DB_USER=${{ secrets.DYUPS_DB_USER }}" \
              --env "DYUPS_DB_PASSWORD=${{ secrets.DYUPS_DB_PASSWORD }}" \
              --env "DYUPS_DB_CHARSET=${{ secrets.DYUPS_DB_CHARSET }}" \
              ghcr.io/xuexb/dyups:${{ inputs.version }} \
            && sleep 2 \
            && if [ "$(curl -sL -w '%{http_code}' -H 'host: dyups' -H 'x-dyups-token: ${{ secrets.DYUPS_TOKEN }}' --connect-timeout 3 127.0.0.1/api/reload?r=$RANDOM -o /dev/null)" != "200" ]; then exit 2; fi \
            && sleep 5
