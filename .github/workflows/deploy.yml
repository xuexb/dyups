name: Deploy
on:
  workflow_call:
    inputs:
      envname:
        description: '部署环境'
        default: 'dev'
        type: string
      version:
        description: '部署版本'
        default: 'master'
        type: string
    secrets:
      SSH_HOST_DEV:
      SSH_USERNAME_DEV:
      SSH_KEY_DEV:
      SSH_PORT_DEV:
      SSH_HOST_PRD:
      SSH_USERNAME_PRD:
      SSH_KEY_PRD:
      SSH_PORT_PRD:
      GHCR_ACCESS_TOKEN:
      DYUPS_TOKEN:
      DYUPS_DB_HOST:
      DYUPS_DB_PORT:
      DYUPS_DB_DATABASE:
      DYUPS_DB_USER:
      DYUPS_DB_PASSWORD:
      DYUPS_DB_CHARSET:
      GHCR_MIRROR:
  workflow_dispatch:
    inputs:
      envname:
        description: '部署环境'
        default: 'dev'
        type: choice
        options:
          - dev
          - prd
      version:
        description: '部署版本'
        default: 'master'
        type: string

env:
  REPO: xuexb/dyups
  IMAGE_VERSION: ${{ inputs.version || github.event.inputs.version }}
  REPOSITORY_TAG: ghcr.io/xuexb/dyups:${{ inputs.version || github.event.inputs.version }}
  MIRROR_REPOSITORY_TAG: ${{ secrets.GHCR_MIRROR }}/xuexb/dyups:${{ inputs.version || github.event.inputs.version }}
  OWNER: xuexb
  CONTAINER_NAME: dyups

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.check_version.outputs.HTTP_CODE }}
    steps:
      - name: Generate Token
        id: generate_token
        run: |
          TOKEN=`curl -su ${{ env.OWNER }}:${{ secrets.GHCR_ACCESS_TOKEN }} https://ghcr.io/token\?scope\="repository:${{ env.REPO }}:pull" | awk -F '"' '{print $4}'`
          echo "::set-output name=GHCR_PULL_TOKEN::$TOKEN"
      - name: Check version
        id: check_version
        if: ${{ steps.generate_token.conclusion == 'success' }}
        run: |
          HTTP_CODE=`curl -sL -w '%{http_code}' --connect-timeout 5 -H 'Authorization: Bearer ${{ steps.generate_token.outputs.GHCR_PULL_TOKEN }}' https://ghcr.io/v2/${{ env.REPO }}/manifests/${{ env.IMAGE_VERSION }} -o /dev/null`
          if [ "$HTTP_CODE" == "200" ]; then
            echo "::set-output name=HTTP_CODE::$HTTP_CODE"
          else
            echo "curl https://ghcr.io/v2/${{ env.REPO }}/manifests/${{ env.IMAGE_VERSION }} Response => $HTTP_CODE"
            exit 1
          fi
  deploy-dev:
    runs-on: ubuntu-latest
    needs: check-version
    if: |
      needs.check-version.outputs.result == '200'
      && (inputs.envname == 'dev' || github.event.inputs.envname == 'dev')
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_DEV }}
          username: ${{ secrets.SSH_USERNAME_DEV }}
          key: ${{ secrets.SSH_KEY_DEV }}
          port: ${{ secrets.SSH_PORT_DEV }}
          debug: true
          command_timeout: 30m
          script: |
            docker pull ${{ env.MIRROR_REPOSITORY_TAG }} \
              && docker ps -aq --filter "name=${{ env.CONTAINER_NAME }}" | xargs docker rm -f || echo "Delete fail" \
              && docker run \
                -p 80:80 \
                -p 443:443 \
                --rm \
                -d \
                --name "${{ env.CONTAINER_NAME }}" \
                --env "DYUPS_TOKEN=${{ secrets.DYUPS_TOKEN }}" \
                --env "DYUPS_DB_HOST=${{ secrets.DYUPS_DB_HOST }}" \
                --env "DYUPS_DB_PORT=${{ secrets.DYUPS_DB_PORT }}" \
                --env "DYUPS_DB_DATABASE=${{ secrets.DYUPS_DB_DATABASE }}" \
                --env "DYUPS_DB_USER=${{ secrets.DYUPS_DB_USER }}" \
                --env "DYUPS_DB_PASSWORD=${{ secrets.DYUPS_DB_PASSWORD }}" \
                --env "DYUPS_DB_CHARSET=${{ secrets.DYUPS_DB_CHARSET }}" \
                ${{ env.MIRROR_REPOSITORY_TAG }}
      - name: Test
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_DEV }}
          username: ${{ secrets.SSH_USERNAME_DEV }}
          key: ${{ secrets.SSH_KEY_DEV }}
          port: ${{ secrets.SSH_PORT_DEV }}
          debug: true
          command_timeout: 30m
          script: |
            if [ "$(curl -sL -w '%{http_code}' -H 'host: dyups' -H 'x-dyups-token: ${{ secrets.DYUPS_TOKEN }}' --connect-timeout 3 127.0.0.1/api/reload?r=$RANDOM -o /dev/null)" != "200" ]; then
              exit 1
            fi
  test-dev:
    runs-on: ubuntu-latest
    needs: deploy-dev
    if: ${{ needs.deploy-dev.result == 'success' }}
    steps:
      - name: Test
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_DEV }}
          username: ${{ secrets.SSH_USERNAME_DEV }}
          key: ${{ secrets.SSH_KEY_DEV }}
          port: ${{ secrets.SSH_PORT_DEV }}
          debug: true
          command_timeout: 30m
          script: |
            if [ "$(curl -sL -w '%{http_code}' -H 'host: dyups' -H 'x-dyups-token: ${{ secrets.DYUPS_TOKEN }}' --connect-timeout 3 127.0.0.1/api/reload?r=$RANDOM -o /dev/null)" != "200" ]; then
              exit 1
            fi
